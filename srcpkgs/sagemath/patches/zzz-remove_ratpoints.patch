From 3178a5e1e4f7174343fd913494ae255b3e05fb85 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Gonzalo=20Tornar=C3=ADa?= <tornaria@cmat.edu.uy>
Date: Mon, 17 Jan 2022 21:04:42 -0300
Subject: [PATCH] ratpoints: remove deprecated package

---
 .github/workflows/ci-cygwin-minimal.yml       |   2 +-
 .github/workflows/ci-cygwin-standard.yml      |   2 +-
 COPYING.txt                                   |   1 -
 build/pkgs/ratpoints/SPKG.rst                 |  29 --
 build/pkgs/ratpoints/checksums.ini            |   4 -
 build/pkgs/ratpoints/dependencies             |   5 -
 build/pkgs/ratpoints/distros/arch.txt         |   1 -
 build/pkgs/ratpoints/distros/conda.txt        |   1 -
 build/pkgs/ratpoints/distros/debian.txt       |   1 -
 build/pkgs/ratpoints/distros/nix.txt          |   1 -
 build/pkgs/ratpoints/distros/repology.txt     |   1 -
 build/pkgs/ratpoints/package-version.txt      |   1 -
 build/pkgs/ratpoints/patches/Makefile.patch   |  37 ---
 .../patches/sturm_and_rp_private.patch        | 194 ------------
 build/pkgs/ratpoints/spkg-install.in          |  46 ---
 build/pkgs/ratpoints/type                     |   1 -
 build/pkgs/sagelib/dependencies               |   2 +-
 src/sage/libs/ratpoints.pxd                   |  74 -----
 src/sage/libs/ratpoints.pyx                   | 283 ------------------
 .../elliptic_curves/descent_two_isogeny.pyx   |   2 -
 src/sage_setup/library_order.py               |   2 +-
 21 files changed, 4 insertions(+), 686 deletions(-)
 delete mode 100644 build/pkgs/ratpoints/SPKG.rst
 delete mode 100644 build/pkgs/ratpoints/checksums.ini
 delete mode 100644 build/pkgs/ratpoints/dependencies
 delete mode 100644 build/pkgs/ratpoints/distros/arch.txt
 delete mode 100644 build/pkgs/ratpoints/distros/conda.txt
 delete mode 100644 build/pkgs/ratpoints/distros/debian.txt
 delete mode 100644 build/pkgs/ratpoints/distros/nix.txt
 delete mode 100644 build/pkgs/ratpoints/distros/repology.txt
 delete mode 100644 build/pkgs/ratpoints/package-version.txt
 delete mode 100644 build/pkgs/ratpoints/patches/Makefile.patch
 delete mode 100644 build/pkgs/ratpoints/patches/sturm_and_rp_private.patch
 delete mode 100644 build/pkgs/ratpoints/spkg-install.in
 delete mode 100644 build/pkgs/ratpoints/type
 delete mode 100644 src/sage/libs/ratpoints.pxd
 delete mode 100644 src/sage/libs/ratpoints.pyx

diff --git a/.github/workflows/ci-cygwin-minimal.yml b/.github/workflows/ci-cygwin-minimal.yml
index 9e847e7474..9df1365657 100644
--- a/.github/workflows/ci-cygwin-minimal.yml
+++ b/.github/workflows/ci-cygwin-minimal.yml
@@ -217,7 +217,7 @@ jobs:
     env:
       STAGE: ii-b
       PREVIOUS_STAGES: i-*
-      TARGETS: singular maxima gap pari gfan palp flintqs ratpoints arb ecm givaro
+      TARGETS: singular maxima gap pari gfan palp flintqs arb ecm givaro
       LOCAL_ARTIFACT_NAME: sage-local-commit-${{ github.sha }}-cygwin-${{ matrix.pkgs }}
       LOGS_ARTIFACT_NAME: logs-commit-${{ github.sha }}-cygwin-${{ matrix.pkgs }}
 
diff --git a/.github/workflows/ci-cygwin-standard.yml b/.github/workflows/ci-cygwin-standard.yml
index cbbe0f46a8..8aee1c2c3c 100644
--- a/.github/workflows/ci-cygwin-standard.yml
+++ b/.github/workflows/ci-cygwin-standard.yml
@@ -217,7 +217,7 @@ jobs:
     env:
       STAGE: ii-b
       PREVIOUS_STAGES: i-*
-      TARGETS: singular maxima gap pari gfan palp flintqs ratpoints arb ecm givaro
+      TARGETS: singular maxima gap pari gfan palp flintqs arb ecm givaro
       LOCAL_ARTIFACT_NAME: sage-local-commit-${{ github.sha }}-cygwin-${{ matrix.pkgs }}
       LOGS_ARTIFACT_NAME: logs-commit-${{ github.sha }}-cygwin-${{ matrix.pkgs }}
 
diff --git a/COPYING.txt b/COPYING.txt
index 1176a856a0..a3e9cc6645 100644
--- a/COPYING.txt
+++ b/COPYING.txt
@@ -107,7 +107,6 @@ pynac                       GPLv2+
 pyparsing                   MIT License
 python                      Python License (see below)
 R                           GPLv2+
-ratpoints                   GPLv2+
 readline                    GPLv3+
 rpy                         GPLv2+
 rubiks/dietz                GPL, any version
diff --git a/build/pkgs/ratpoints/SPKG.rst b/build/pkgs/ratpoints/SPKG.rst
deleted file mode 100644
index 6607094bec..0000000000
--- a/build/pkgs/ratpoints/SPKG.rst
+++ /dev/null
@@ -1,29 +0,0 @@
-ratpoints: Find rational points on hyperelliptic curves
-=======================================================
-
-Description
------------
-
-Michael Stoll's program which searches for rational points on
-hyperelliptic curves.
-
-NOTE: the ratpoints package has been assimilated by PARI/GP. Therefore,
-this package (as Sage package) is deprecated. In the future, it will be
-removed from Sage.
-
-
-Upstream Contact
-----------------
-
--  Author: Michael Stoll
--  Email: Michael.Stoll@uni-bayreuth.de
--  Website: http://www.mathe2.uni-bayreuth.de/stoll/programs/
-
-
-Note on SSE2 instructions
-~~~~~~~~~~~~~~~~~~~~~~~~~
-
--  On several architectures, the SSE2 instructions used by ratpoints
-   cause
-   compiler errors. In the case that ratpoints fails to build with SSE2
-   instructions enabled, the build is repeated with SSE2 disabled.
diff --git a/build/pkgs/ratpoints/checksums.ini b/build/pkgs/ratpoints/checksums.ini
deleted file mode 100644
index 46ba1c9ec1..0000000000
--- a/build/pkgs/ratpoints/checksums.ini
+++ /dev/null
@@ -1,4 +0,0 @@
-tarball=ratpoints-VERSION.tar.bz2
-sha1=14fbc3dd50742794e0b33d2dd1217e5dd8ad2623
-md5=9bf091d1b90132433f0a1fc6b585d024
-cksum=670991933
diff --git a/build/pkgs/ratpoints/dependencies b/build/pkgs/ratpoints/dependencies
deleted file mode 100644
index 9a77ea16f7..0000000000
--- a/build/pkgs/ratpoints/dependencies
+++ /dev/null
@@ -1,5 +0,0 @@
-$(MP_LIBRARY)
-
-----------
-All lines of this file are ignored except the first.
-It is copied by SAGE_ROOT/build/make/install into SAGE_ROOT/build/make/Makefile.
diff --git a/build/pkgs/ratpoints/distros/arch.txt b/build/pkgs/ratpoints/distros/arch.txt
deleted file mode 100644
index e137758627..0000000000
--- a/build/pkgs/ratpoints/distros/arch.txt
+++ /dev/null
@@ -1 +0,0 @@
-ratpoints
diff --git a/build/pkgs/ratpoints/distros/conda.txt b/build/pkgs/ratpoints/distros/conda.txt
deleted file mode 100644
index e137758627..0000000000
--- a/build/pkgs/ratpoints/distros/conda.txt
+++ /dev/null
@@ -1 +0,0 @@
-ratpoints
diff --git a/build/pkgs/ratpoints/distros/debian.txt b/build/pkgs/ratpoints/distros/debian.txt
deleted file mode 100644
index dabd28d624..0000000000
--- a/build/pkgs/ratpoints/distros/debian.txt
+++ /dev/null
@@ -1 +0,0 @@
-libratpoints-dev
diff --git a/build/pkgs/ratpoints/distros/nix.txt b/build/pkgs/ratpoints/distros/nix.txt
deleted file mode 100644
index e137758627..0000000000
--- a/build/pkgs/ratpoints/distros/nix.txt
+++ /dev/null
@@ -1 +0,0 @@
-ratpoints
diff --git a/build/pkgs/ratpoints/distros/repology.txt b/build/pkgs/ratpoints/distros/repology.txt
deleted file mode 100644
index e137758627..0000000000
--- a/build/pkgs/ratpoints/distros/repology.txt
+++ /dev/null
@@ -1 +0,0 @@
-ratpoints
diff --git a/build/pkgs/ratpoints/package-version.txt b/build/pkgs/ratpoints/package-version.txt
deleted file mode 100644
index efed46a7bd..0000000000
--- a/build/pkgs/ratpoints/package-version.txt
+++ /dev/null
@@ -1 +0,0 @@
-2.1.3.p5
diff --git a/build/pkgs/ratpoints/patches/Makefile.patch b/build/pkgs/ratpoints/patches/Makefile.patch
deleted file mode 100644
index 093d7c0018..0000000000
--- a/build/pkgs/ratpoints/patches/Makefile.patch
+++ /dev/null
@@ -1,37 +0,0 @@
---- src/Makefile	2009-10-01 01:08:54.000000000 +0200
-+++ patches/Makefile	2012-03-17 13:57:33.026315142 +0100
-@@ -21,11 +21,11 @@
- #
- #    Michael Stoll, September 21, 2009
- 
--CC = gcc
-+CC ?= gcc
- RM = rm -f
- INSTALL = cp
- 
--INSTALL_DIR = /usr/local
-+INSTALL_DIR ?= /usr/local
- 
- DISTFILES = Makefile ratpoints.h rp-private.h primes.h \
-             gen_find_points_h.c gen_init_sieve_h.c \
-@@ -47,14 +47,14 @@
- 	diff -q testbase rptest.out
- 
- install-bin: ratpoints
--	${INSTALL} ratpoints ${INSTALL_DIR}/bin/
--	chmod 755 ${INSTALL_DIR}/bin/ratpoints
-+	${INSTALL} ratpoints "${INSTALL_DIR}/bin/"
-+	chmod 755 "${INSTALL_DIR}/bin/ratpoints"
- 
- install-lib: ratpoints.h libratpoints.a
--	${INSTALL} ratpoints.h ${INSTALL_DIR}/include/
--	chmod 644 ${INSTALL_DIR}/include/ratpoints.h
--	${INSTALL} libratpoints.a ${INSTALL_DIR}/lib/
--	chmod 644 ${INSTALL_DIR}/lib/libratpoints.a
-+	${INSTALL} ratpoints.h "${INSTALL_DIR}/include/"
-+	chmod 644 "${INSTALL_DIR}/include/ratpoints.h"
-+	${INSTALL} libratpoints.a "${INSTALL_DIR}/lib/"
-+	chmod 644 "${INSTALL_DIR}/lib/libratpoints.a"
- 
- install: install-bin install-lib
- 
diff --git a/build/pkgs/ratpoints/patches/sturm_and_rp_private.patch b/build/pkgs/ratpoints/patches/sturm_and_rp_private.patch
deleted file mode 100644
index 664198c4de..0000000000
--- a/build/pkgs/ratpoints/patches/sturm_and_rp_private.patch
+++ /dev/null
@@ -1,194 +0,0 @@
-diff --git a/rp-private.h b/rp-private.h
-index b4c7dad..0c7193e 100644
---- a/rp-private.h
-+++ b/rp-private.h
-@@ -36,7 +36,7 @@
- #define LONG_SHIFT ((LONG_LENGTH == 16) ? 4 : \
-                     (LONG_LENGTH == 32) ? 5 : \
- 		    (LONG_LENGTH == 64) ? 6 : 0)
--#define LONG_MASK (~(-1L<<LONG_SHIFT))
-+#define LONG_MASK (~(-(1L<<LONG_SHIFT)))
- 
- /* Check if SSE instructions can be used.
-    We assume that one SSE word of 128 bit is two long's,
-diff --git a/sturm.c b/sturm.c
-index c78d7c6..5fd2cf5 100644
---- a/sturm.c
-+++ b/sturm.c
-@@ -27,7 +27,6 @@
-  ***********************************************************************/
- 
- #include "ratpoints.h"
--
- /**************************************************************************
-  * Arguments of _ratpoints_compute_sturm() : (from the args argument)     *
-  *                                                                        *
-@@ -53,7 +52,7 @@
- /* A helper function: evaluate the polynomial in cofs[] of given degree
-   at num/2^denexp and return the sign. */
- 
--static long eval_sign(ratpoints_args *args, mpz_t *cofs, long degree,
-+static long eval_sign(const ratpoints_args *args, const mpz_t *cofs, long degree,
-                       long num, long denexp)
- {
-   long n, e, s;
-@@ -70,11 +69,80 @@ static long eval_sign(ratpoints_args *args, mpz_t *cofs, long degree,
-   return(s);
- }
- 
-+static const    long max = (long)(((unsigned long)(-1))>>1);
-+static const    long min = (long)(-(((unsigned long)(-1))>>1));
-+    /* recursive helper function */
-+static void iterate(long nl, long nr, long del, long der, long cleft, long cright,
-+                 long sl, long sr, long depth,
-+		 ratpoints_interval **iptr, const ratpoints_interval *ivlo,
-+		 const ratpoints_args *args, const long k, const long sturm_degs[],
-+                 const mpz_t sturm[][args->degree + 1])
-+    { /* nl/2^del, nr/2^der : interval left/right endpoints,
-+         cleft, cright: sign change counts at endpoints,
-+         sl, sr: signs at endpoints,
-+         depth: iteration depth */
-+     long iter = args->sturm;
-+      if(cleft == cright && sl < 0) { return; }
-+         /* here we know the polynomial is negative on the interval */
-+      if((cleft == cright && sl > 0) || depth >= iter)
-+      /* we have to add/extend an interval if we either know that
-+         the polynomial is positive on the interval (first condition)
-+         or the maximal iteration depth has been reached (second condition) */
-+      { double l = ((double)nl)/((double)(1<<del));
-+        double u = ((double)nr)/((double)(1<<der));
-+        if(*iptr == ivlo)
-+        { (*iptr)->low = l; (*iptr)->up  = u; (*iptr)++; }
-+        else
-+        { if(((*iptr)-1)->up == l) /* extend interval */
-+          { ((*iptr)-1)->up = u; }
-+          else /* new interval */
-+          { (*iptr)->low = l; (*iptr)->up  = u; (*iptr)++; }
-+        }
-+        return;
-+      }
-+      /* now we must split the interval and evaluate the sturm sequence
-+         at the midpoint */
-+      { long nm, dem, s0, s1, s2, s, cmid = 0, n;
-+        if(nl == min)
-+        { if(nr == max) { nm = 0; dem = 0; }
-+          else { nm = (nr == 0) ? -1 : 2*nr; dem = 0; }
-+        }
-+        else
-+        { if(nr == max) { nm = (nl == 0) ? 1 : 2*nl; dem = 0; }
-+          else /* "normal" case */
-+          { if(del == der) /* then both are zero */
-+            { if(((nl+nr) & 1) == 0) { nm = (nl+nr)>>1; dem = 0; }
-+              else { nm = nl+nr; dem = 1; }
-+            }
-+            else /* here one de* is greater */
-+            { if(del > der) { nm = nl + (nr<<(del-der)); dem = del+1; }
-+              else { nm = (nl<<(der-del)) + nr; dem = der+1; }
-+            }
-+          }
-+        }
-+        s0 = eval_sign(args, sturm[0], sturm_degs[0], nm, dem);
-+        s1 = eval_sign(args, sturm[1], sturm_degs[1], nm, dem);
-+        if(s0*s1 == -1) { cmid++; }
-+        s = (s1 == 0) ? s0 : s1;
-+        for(n = 2; n <= k; n++)
-+        { s2 = eval_sign(args, sturm[n], sturm_degs[n], nm, dem);
-+          if(s2 == -s) { cmid++; s = s2; }
-+          else if(s2 != 0) { s = s2; }
-+        }
-+        /* now recurse */
-+        iterate(nl, nm, del, dem, cleft, (s0==0) ? (cmid+1) : cmid,
-+                sl, (s0==0) ? -s1 : s0, depth+1,
-+                iptr, ivlo, args, k, sturm_degs, sturm);
-+        iterate(nm, nr, dem, der, cmid, cright,
-+                (s0==0) ? s1 : s0, sr, depth+1,
-+		iptr, ivlo, args, k, sturm_degs, sturm);
-+      }
-+    } /* end iterate() */
-+
- long _ratpoints_compute_sturm(ratpoints_args *args)
- { 
-   mpz_t *cofs = args->cof;
-   long degree = args->degree;
--  long iter = args->sturm; 
-   ratpoints_interval *ivlist = args->domain;
-   long num_iv = args->num_inter;
-   long n, m, k, new_num;
-@@ -165,75 +233,12 @@ long _ratpoints_compute_sturm(ratpoints_args *args)
-   /* recall: typedef struct {double low; double up;} ratpoints_interval; */
-   { ratpoints_interval ivlocal[1 + (degree>>1)];
-     ratpoints_interval *iptr = &ivlocal[0];
--    long max = (long)(((unsigned long)(-1))>>1);
--    long min = -max;
-     long num_intervals;
-     long slcf = mpz_cmp_si(cofs[degree], 0);
- 
--    /* recursive helper function */
--    void iterate(long nl, long nr, long del, long der, long cleft, long cright,
--                 long sl, long sr, long depth)
--    { /* nl/2^del, nr/2^der : interval left/right endpoints,
--         cleft, cright: sign change counts at endpoints,
--         sl, sr: signs at endpoints,
--         depth: iteration depth */
--      if(cleft == cright && sl < 0) { return; }
--         /* here we know the polynomial is negative on the interval */
--      if((cleft == cright && sl > 0) || depth >= iter) 
--      /* we have to add/extend an interval if we either know that
--         the polynomial is positive on the interval (first condition)
--         or the maximal iteration depth has been reached (second condition) */
--      { double l = ((double)nl)/((double)(1<<del));
--        double u = ((double)nr)/((double)(1<<der));
--        if(iptr == &ivlocal[0])
--        { iptr->low = l; iptr->up  = u; iptr++; }
--        else
--        { if((iptr-1)->up == l) /* extend interval */
--          { (iptr-1)->up = u; }
--          else /* new interval */
--          { iptr->low = l; iptr->up  = u; iptr++; }
--        }
--        return; 
--      }
--      /* now we must split the interval and evaluate the sturm sequence
--         at the midpoint */
--      { long nm, dem, s0, s1, s2, s, cmid = 0, n;
--        if(nl == min)
--        { if(nr == max) { nm = 0; dem = 0; }
--          else { nm = (nr == 0) ? -1 : 2*nr; dem = 0; }
--        }
--        else
--        { if(nr == max) { nm = (nl == 0) ? 1 : 2*nl; dem = 0; } 
--          else /* "normal" case */
--          { if(del == der) /* then both are zero */
--            { if(((nl+nr) & 1) == 0) { nm = (nl+nr)>>1; dem = 0; }
--              else { nm = nl+nr; dem = 1; } 
--            }
--            else /* here one de* is greater */
--            { if(del > der) { nm = nl + (nr<<(del-der)); dem = del+1; }
--              else { nm = (nl<<(der-del)) + nr; dem = der+1; }
--            }
--          }
--        }
--        s0 = eval_sign(args, sturm[0], sturm_degs[0], nm, dem);
--        s1 = eval_sign(args, sturm[1], sturm_degs[1], nm, dem);
--        if(s0*s1 == -1) { cmid++; }
--        s = (s1 == 0) ? s0 : s1;
--        for(n = 2; n <= k; n++)
--        { s2 = eval_sign(args, sturm[n], sturm_degs[n], nm, dem);
--          if(s2 == -s) { cmid++; s = s2; }
--          else if(s2 != 0) { s = s2; }
--        }
--        /* now recurse */
--        iterate(nl, nm, del, dem, cleft, (s0==0) ? (cmid+1) : cmid, 
--                sl, (s0==0) ? -s1 : s0, depth+1);
--        iterate(nm, nr, dem, der, cmid, cright, 
--                (s0==0) ? s1 : s0, sr, depth+1);
--      }
--    } /* end iterate() */
--
-     iterate(min, max, 0, 0, count2, count1, 
--            (degree & 1) ? -slcf : slcf, slcf, 0);
-+            (degree & 1) ? -slcf : slcf, slcf, 0,
-+	    &iptr, &ivlocal[0], args, k, sturm_degs, sturm);
-     num_intervals = iptr - &ivlocal[0];
-     /* intersect with given intervals */
-     { ratpoints_interval local_copy[num_iv];
diff --git a/build/pkgs/ratpoints/spkg-install.in b/build/pkgs/ratpoints/spkg-install.in
deleted file mode 100644
index b6856c4d4a..0000000000
--- a/build/pkgs/ratpoints/spkg-install.in
+++ /dev/null
@@ -1,46 +0,0 @@
-PRIME_SIZE=7
-
-CCFLAGS_NO_SSE="-I$SAGE_LOCAL/include -Wall -O2 -fPIC -DRATPOINTS_MAX_BITS_IN_PRIME=$PRIME_SIZE"
-CCFLAGS2="-L$SAGE_LOCAL/lib -lgmp -lm $LDFLAGS"
-CCFLAGS3="-L. -lratpoints"
-
-if [[ "$UNAME" = "Darwin" ]]; then
-    CCFLAGS1="$CCFLAGS_NO_SSE"
-    echo "Building without SSE2 instructions (MacOS X)."
-else
-    CCFLAGS1="$CCFLAGS_NO_SSE -DUSE_SSE"
-    echo "Attempting to build ratpoints making use of SSE2 instructions."
-fi
-
-# Copy CFLAGS set externally to CCFLAGS.
-CCFLAGS="$CFLAGS"
-
-export CCFLAGS1
-export CCFLAGS2
-export CCFLAGS3
-export CCFLAGS
-
-cd src/
-
-#############################
-# Build (just) the library: #
-#############################
-
-# PLEASE, don't break this again by deleting "libratpoints.a".  See trac 8267.
-if ! $MAKE libratpoints.a; then
-    [ "$UNAME" = "Darwin" ] && sdh_die "Error building ratpoints."
-    echo "Build failed. Trying without SSE2 instructions."
-    CCFLAGS1="$CCFLAGS_NO_SSE"
-    sdh_make libratpoints.a
-fi
-
-##############################################
-# Install (just) the library and its header: #
-##############################################
-
-# The following requires that the Makefile got patched;
-# otherwise one could pass 'INSTALL_DIR=...' on the 'make'
-# command line:
-export INSTALL_DIR="$SAGE_DESTDIR_LOCAL"
-mkdir -p "$INSTALL_DIR"/{lib,include}
-sdh_make install-lib
diff --git a/build/pkgs/ratpoints/type b/build/pkgs/ratpoints/type
deleted file mode 100644
index a6a7b9cd72..0000000000
--- a/build/pkgs/ratpoints/type
+++ /dev/null
@@ -1 +0,0 @@
-standard
diff --git a/build/pkgs/sagelib/dependencies b/build/pkgs/sagelib/dependencies
index 9c7797b1f4..6a7d4b8132 100644
--- a/build/pkgs/sagelib/dependencies
+++ b/build/pkgs/sagelib/dependencies
@@ -1,4 +1,4 @@
-FORCE $(SCRIPTS) arb boost_cropped $(BLAS) brial cliquer cypari cysignals cython ecl eclib ecm flint libgd gap giac givaro glpk gmpy2 gsl iml jinja2 jupyter_core lcalc lrcalc libbraiding libhomfly libpng linbox m4ri m4rie memory_allocator mpc mpfi mpfr $(MP_LIBRARY) ntl numpy pari pip pkgconfig planarity ppl pplpy primesieve primecount primecountpy pycygwin $(PYTHON) ratpoints requests rw sage_conf singular symmetrica zn_poly $(PCFILES) | $(PYTHON_TOOLCHAIN) sage_setup
+FORCE $(SCRIPTS) arb boost_cropped $(BLAS) brial cliquer cypari cysignals cython ecl eclib ecm flint libgd gap giac givaro glpk gmpy2 gsl iml jinja2 jupyter_core lcalc lrcalc libbraiding libhomfly libpng linbox m4ri m4rie memory_allocator mpc mpfi mpfr $(MP_LIBRARY) ntl numpy pari pip pkgconfig planarity ppl pplpy primesieve primecount primecountpy pycygwin $(PYTHON) requests rw sage_conf singular symmetrica zn_poly $(PCFILES) | $(PYTHON_TOOLCHAIN) sage_setup
 
 ----------
 All lines of this file are ignored except the first.
diff --git a/src/sage/libs/ratpoints.pxd b/src/sage/libs/ratpoints.pxd
deleted file mode 100644
index 67e309b109..0000000000
--- a/src/sage/libs/ratpoints.pxd
+++ /dev/null
@@ -1,74 +0,0 @@
-from sage.rings.integer cimport Integer
-from sage.libs.gmp.mpz cimport *
-
-cdef extern from "ratpoints.h":
-    long RATPOINTS_MAX_DEGREE
-    long RATPOINTS_ARRAY_SIZE
-    long RATPOINTS_DEFAULT_SP1
-    long RATPOINTS_DEFAULT_SP2
-    long RATPOINTS_DEFAULT_NUM_PRIMES
-    long RATPOINTS_DEFAULT_MAX_FORBIDDEN
-    long RATPOINTS_DEFAULT_STURM
-    long RATPOINTS_NON_SQUAREFREE
-    long RATPOINTS_BAD_ARGS
-
-    # for args flags:
-    long RATPOINTS_NO_CHECK # when set, do not check whether the surviving
-                            # x-coordinates give rise to rational points
-    long RATPOINTS_NO_Y # when set, only list x coordinates instead of actual points
-    long RATPOINTS_NO_REVERSE # when set, do not modify the mpz_t array
-    long RATPOINTS_NO_JACOBI # when set, prevent use of Jacobi symbol test
-    long RATPOINTS_VERBOSE # when set, print some output on what ratpoints is doing
-    # define RATPOINTS_FLAGS_INPUT_MASK \
-    # (RATPOINTS_NO_CHECK | RATPOINTS_NO_Y | RATPOINTS_NO_REVERSE | \
-    #  RATPOINTS_NO_JACOBI | RATPOINTS_VERBOSE)
-
-
-    ctypedef struct ratpoints_interval:
-        double low
-        double up
-    ctypedef struct ratpoints_args:
-        mpz_t *cof
-        long degree
-        long height
-        ratpoints_interval *domain
-        long num_inter
-        long b_low
-        long b_high
-        long sp1
-        long sp2
-        long array_size
-        long sturm
-        long num_primes
-        long max_forbidden
-        unsigned int flags
-        # from here: private data
-        # mpz_t *work
-        # void *se_buffer
-        # void *se_next
-        # void *ba_buffer
-        # void *ba_next
-        # int *int_buffer
-        # int *int_next
-        # void *sieve_list
-    long find_points(ratpoints_args*, int proc(long, long, mpz_t, void*, int*), void*)
-    void find_points_init(ratpoints_args*)
-    long find_points_work(ratpoints_args*, int proc(long, long, mpz_t, void*, int*), void*)
-    void find_points_clear(ratpoints_args*)
-
-ctypedef struct point_list:
-    long *xes
-    mpz_t *ys
-    long *zs
-    long array_size
-    long num_points
-    long max_num_points
-
-ctypedef struct info_struct_exists_only:
-    int verbose
-
-cdef int ratpoints_mpz_exists_only(mpz_t *, long, int, bint) except -1
-
-
-
-
diff --git a/src/sage/libs/ratpoints.pyx b/src/sage/libs/ratpoints.pyx
deleted file mode 100644
index 257dfe3eeb..0000000000
--- a/src/sage/libs/ratpoints.pyx
+++ /dev/null
@@ -1,283 +0,0 @@
-# distutils: libraries = ratpoints
-r"""
-Hyperelliptic Curve Point Finding, via ratpoints (deprecated)
-
-This module is deprecated, use PARI instead::
-
-    sage: pari(EllipticCurve("389a1")).ellratpoints(4)
-    [[-2, 0], [-2, -1], [-1, 1], [-1, -2], [0, 0], [0, -1], [1, 0], [1, -1], [3, 5], [3, -6], [4, 8], [4, -9], [-3/4, 7/8], [-3/4, -15/8]]
-    sage: pari("[x^3 + x^2 - 2*x, 1]").hyperellratpoints(4)
-    [[-2, 0], [-2, -1], [-1, 1], [-1, -2], [0, 0], [0, -1], [1, 0], [1, -1], [3, 5], [3, -6], [4, 8], [4, -9], [-3/4, 7/8], [-3/4, -15/8]]
-"""
-
-from cysignals.memory cimport sig_malloc, sig_realloc, sig_free
-from cysignals.signals cimport sig_on, sig_off
-
-from sage.misc.superseded import deprecation_cython as deprecation
-deprecation(24531, "the module sage.libs.ratpoints is deprecated; use pari.ellratpoints or pari.hyperellratpoints instead")
-
-
-cdef int process(long x, long z, mpz_t y, void *info0, int *quit):
-    # ratpoints calls this function when it finds a point [x : y : z]
-    # info0 is the pointer passed to ratpoints originally
-    # if quit[0] is set to a nonzero value, ratpoints will abort immediately
-    cdef point_list *plist = <point_list *> info0
-    cdef long i
-    if plist.array_size == plist.num_points:
-        i = plist.array_size
-        plist.array_size *= 2
-        plist.xes = <long *> sig_realloc(plist.xes, plist.array_size * sizeof(long))
-        plist.ys = <mpz_t *> sig_realloc(plist.ys, plist.array_size * sizeof(mpz_t))
-        plist.zs = <long *> sig_realloc(plist.zs, plist.array_size * sizeof(long))
-        while i < plist.array_size:
-            mpz_init(plist.ys[i])
-            i += 1
-    plist.xes[plist.num_points] = x
-    mpz_set(plist.ys[plist.num_points], y)
-    plist.zs[plist.num_points] = z
-    plist.num_points += 1
-    if plist.max_num_points > 0:
-        if plist.max_num_points == plist.num_points:
-            quit[0] = -1
-    return 1 # weight for counting the points
-
-def ratpoints(list coeffs, long H, verbose=False, long max=0,
-              min_x_denom=None, max_x_denom=None, intervals=[]):
-    """
-    Access the ratpoints library to find points on the hyperelliptic curve:
-
-    `y^2 = a_n x^n + \cdots + a_1 x + a_0.`
-
-    INPUT:
-
-    - ``coeffs`` -- list of integer coefficients `a_0` , `a_1`, ..., `a_n`
-
-    - ``H`` -- the bound for the denominator and the absolute value of the
-      numerator of the `x`-coordinate
-
-    - ``verbose`` -- if ``True``, ratpoints will print comments about
-      its progress
-
-    - ``max`` -- maximum number of points to find (if 0, find all of them)
-
-    OUTPUT:
-
-    The points output by this program are points in (1, ceil(n/2), 1)-weighted
-    projective space. If n is even, then the associated homogeneous equation is
-    `y^2 = a_n x^n + \cdots + a_1 x z^{n-1} + a_0 z^n` while if n is odd, it is
-    `y^2 = a_n x^n z + \cdots + a_1 x z^n + a_0 z^{n+1}`.
-
-    EXAMPLES::
-
-        sage: from sage.libs.ratpoints import ratpoints
-        doctest:...: DeprecationWarning: the module sage.libs.ratpoints is deprecated; use pari.ellratpoints or pari.hyperellratpoints instead
-        See http://trac.sagemath.org/24531 for details.
-        sage: for x,y,z in ratpoints([1..6], 200):
-        ....:     print(-1*y^2 + 1*z^6 + 2*x*z^5 + 3*x^2*z^4 + 4*x^3*z^3 + 5*x^4*z^2 + 6*x^5*z)
-        0
-        0
-        0
-        0
-        0
-        0
-        0
-        sage: for x,y,z in ratpoints([1..5], 200):
-        ....:    print(-1*y^2 + 1*z^4 + 2*x*z^3 + 3*x^2*z^2 + 4*x^3*z + 5*x^4)
-        0
-        0
-        0
-        0
-        0
-        0
-        0
-        0
-
-        sage: for x,y,z in ratpoints([1..200], 1000):
-        ....:    print("{} {} {}".format(x,y,z))
-        1 0 0
-        0 1 1
-        0 -1 1
-        201 25353012004564588029934064107520000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 200
-        201 -25353012004564588029934064107520000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 200
-
-    The denominator of `x` can be restricted, for example to find
-    integral points::
-
-        sage: from sage.libs.ratpoints import ratpoints
-        sage: coeffs = [400, -112, 0, 1]
-        sage: ratpoints(coeffs, 10^6, max_x_denom=1, intervals=[[-10,0],[1000,2000]])
-        [(1, 0, 0), (-8, 28, 1), (-8, -28, 1), (-7, 29, 1), (-7, -29, 1),
-         (-4, 28, 1), (-4, -28, 1), (0, 20, 1), (0, -20, 1), (1368, 50596, 1),
-         (1368, -50596, 1), (1624, 65444, 1), (1624, -65444, 1)]
-
-        sage: ratpoints(coeffs, 1000, min_x_denom=100, max_x_denom=200)
-        [(1, 0, 0),
-        (-656, 426316, 121),
-        (-656, -426316, 121),
-        (452, 85052, 121),
-        (452, -85052, 121),
-        (988, 80036, 121),
-        (988, -80036, 121),
-        (-556, 773188, 169),
-        (-556, -773188, 169),
-        (264, 432068, 169),
-        (264, -432068, 169)]
-
-    Finding the integral points on the compact component of an elliptic curve::
-
-        sage: E = EllipticCurve([0,1,0,-35220,-1346400])
-        sage: e1, e2, e3 = E.division_polynomial(2).roots(multiplicities=False)
-        sage: coeffs = [E.a6(),E.a4(),E.a2(),1]
-        sage: ratpoints(coeffs, 1000, max_x_denom=1, intervals=[[e3,e2]])
-        [(1, 0, 0),
-        (-165, 0, 1),
-        (-162, 366, 1),
-        (-162, -366, 1),
-        (-120, 1080, 1),
-        (-120, -1080, 1),
-        (-90, 1050, 1),
-        (-90, -1050, 1),
-        (-85, 1020, 1),
-        (-85, -1020, 1),
-        (-42, 246, 1),
-        (-42, -246, 1),
-        (-40, 0, 1)]
-    """
-    cdef ratpoints_args args
-    cdef long i, total, verby
-    cdef Integer sage_int, s_x, s_y, s_z
-    cdef point_list *plist
-
-
-    verby = ~0 if verbose else 0
-
-    # Set the coefficient array:
-    coeffs = [Integer(a) for a in coeffs]
-    args.degree = len(coeffs)-1
-    args.cof = <mpz_t *> sig_malloc((args.degree+1) * sizeof(mpz_t))
-
-    # Create an array to hold the points found:
-    plist = <point_list *> sig_malloc(sizeof(point_list))
-    if max == 0:
-        plist.array_size = 64
-    else:
-        plist.array_size = max
-    plist.xes = <long *> sig_malloc(plist.array_size * sizeof(long))
-    plist.ys = <mpz_t *> sig_malloc(plist.array_size * sizeof(mpz_t))
-    for i from 0 <= i < plist.array_size:
-        mpz_init(plist.ys[i])
-    plist.zs = <long *> sig_malloc(plist.array_size * sizeof(long))
-    plist.num_points = 0
-    plist.max_num_points = max
-
-    # Set the height bound:
-    args.height = H
-
-    # Set the intervals to be searched, including any specified:
-    args.num_inter = len(intervals)
-    args.domain = <ratpoints_interval *> sig_malloc((args.num_inter + args.degree) * sizeof(ratpoints_interval))
-    for i,I in enumerate(intervals):
-        args.domain[i].low = I[0]
-        args.domain[i].up  = I[1]
-
-    # Set the minimum and maximum denominators:
-    if not min_x_denom:  min_x_denom = 1
-    if not max_x_denom:  max_x_denom = H
-    args.b_low = min_x_denom
-    args.b_high = max_x_denom
-
-    # Set the remaining arguments, whose non-default use is technical
-    # (see ratpoints documentation)
-    args.sp1 = RATPOINTS_DEFAULT_SP1
-    args.sp2 = RATPOINTS_DEFAULT_SP2
-    args.array_size = RATPOINTS_ARRAY_SIZE
-    args.sturm = RATPOINTS_DEFAULT_STURM
-    args.num_primes = RATPOINTS_DEFAULT_NUM_PRIMES
-    args.max_forbidden = RATPOINTS_DEFAULT_MAX_FORBIDDEN
-    args.flags = (RATPOINTS_VERBOSE & verby)
-
-    for i from 0 <= i <= args.degree:
-        mpz_init(args.cof[i])
-        sage_int = <Integer> coeffs[i]
-        mpz_set(args.cof[i], sage_int.value)
-
-    sig_on()
-    total = find_points(&args, process, <void *>plist)
-    sig_off()
-    if total == RATPOINTS_NON_SQUAREFREE:
-        raise RuntimeError('Polynomial must be square-free')
-    if total == RATPOINTS_BAD_ARGS:
-        raise RuntimeError('Bad arguments to ratpoints')
-
-    for i from 0 <= i <= args.degree:
-        mpz_clear(args.cof[i])
-
-    sig_free(args.cof)
-    sig_free(args.domain)
-
-    cdef list L = []
-    for i from 0 <= i < plist.num_points:
-        s_x = Integer(0)
-        s_y = Integer(0)
-        s_z = Integer(0)
-        mpz_set_si(s_x.value, plist.xes[i])
-        mpz_set(s_y.value, plist.ys[i])
-        mpz_set_si(s_z.value, plist.zs[i])
-        L.append((s_x,s_y,s_z))
-
-    for i from 0 <= i < plist.array_size:
-        mpz_clear(plist.ys[i])
-    sig_free(plist.xes)
-    sig_free(plist.ys)
-    sig_free(plist.zs)
-    sig_free(plist)
-
-    return L
-
-cdef int process_exists_only(long x, long z, mpz_t y, void *info0, int *quit):
-    cdef info_struct_exists_only *info_s = <info_struct_exists_only *>info0
-    cdef Integer YY
-    if info_s.verbose:
-        YY = Integer(0); mpz_set(YY.value, y)
-        print('Found point [ %d : %d : %d ], quitting' % (x, YY, z))
-    quit[0] = -1
-    return 1
-
-cdef int ratpoints_mpz_exists_only(mpz_t *coeffs, long H, int degree, bint verbose) except -1:
-    """
-    Direct call to ratpoints to search for existence only.
-
-    WARNING - The coefficient array will be modified by ratpoints.
-    """
-    cdef ratpoints_args args
-    cdef info_struct_exists_only info_s
-    cdef long total, verby = ~0 if verbose else 0
-    info_s.verbose = verbose
-    assert degree <= RATPOINTS_MAX_DEGREE
-    args.degree = degree
-    args.cof = coeffs
-    args.domain = <ratpoints_interval *> sig_malloc(2*args.degree * sizeof(ratpoints_interval))
-    args.height = H
-    args.num_inter = 0
-    args.b_low = 1
-    args.b_high = H
-    args.sp1 = RATPOINTS_DEFAULT_SP1
-    args.sp2 = RATPOINTS_DEFAULT_SP2
-    args.array_size = RATPOINTS_ARRAY_SIZE
-    args.sturm = RATPOINTS_DEFAULT_STURM
-    args.num_primes = RATPOINTS_DEFAULT_NUM_PRIMES
-    args.max_forbidden = RATPOINTS_DEFAULT_MAX_FORBIDDEN
-    args.flags = (RATPOINTS_VERBOSE & verby)
-    sig_on()
-    total = find_points(&args, process_exists_only, <void *>(&info_s))
-    sig_off()
-    sig_free(args.domain)
-    if total == RATPOINTS_NON_SQUAREFREE:
-        raise RuntimeError('Polynomial must be square-free')
-    if total == RATPOINTS_BAD_ARGS:
-        raise RuntimeError('Bad arguments to ratpoints')
-    return 1 if (total > 0) else 0
-
-
-
-
diff --git a/src/sage/schemes/elliptic_curves/descent_two_isogeny.pyx b/src/sage/schemes/elliptic_curves/descent_two_isogeny.pyx
index 1cc70925fa..c2f994a650 100644
--- a/src/sage/schemes/elliptic_curves/descent_two_isogeny.pyx
+++ b/src/sage/schemes/elliptic_curves/descent_two_isogeny.pyx
@@ -1,5 +1,3 @@
-# distutils: libraries = ratpoints
-
 r"""
 Descent on elliptic curves over `\QQ` with a 2-isogeny
 """
diff --git a/src/sage_setup/library_order.py b/src/sage_setup/library_order.py
index 8830d44a95..0b450b3723 100644
--- a/src/sage_setup/library_order.py
+++ b/src/sage_setup/library_order.py
@@ -25,7 +25,7 @@ library_order_list = aliases.get("SINGULAR_LIBRARIES", []) + [
     "giac", "intl", "curl",
     "ec", "ecm"
 ] + aliases.get("LINBOX_LIBRARIES", []) + aliases.get("FFLASFFPACK_LIBRARIES", []) + aliases.get("GSL_LIBRARIES", []) + [
-    "pari", "flint", "ratpoints", "ecl", "glpk", "ppl",
+    "pari", "flint", "ecl", "glpk", "ppl",
 ] + arb_dylib_names + [
     "mpfi", "mpfr", "mpc", "ntl", "gmp", "gmpxx",
     "brial",
-- 
2.34.1

