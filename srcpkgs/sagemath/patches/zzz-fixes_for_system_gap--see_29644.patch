From 346b4ea4c92f4287d3c097b92817cf2abfcddd8c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Gonzalo=20Tornar=C3=ADa?= <tornaria@cmat.edu.uy>
Date: Thu, 13 Jan 2022 01:41:31 -0300
Subject: [PATCH] gap: fixes for using system gap

 - fix _get_shared_lib_path() so we don't need to configure GAP_SO
 - fix gap_root() so we don't need to configure GAP_ROOT_DIR
 - skip a useless test that cannot succeed on system gap
 - use gap_root() in saved_workspace.py instead of GAP_ROOT_DIR
---
 src/sage/env.py                      |  2 +-
 src/sage/libs/gap/saved_workspace.py |  4 ++--
 src/sage/libs/gap/util.pyx           | 11 +++++++++++
 src/sage_setup/optional_extension.py |  2 +-
 4 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/src/sage/env.py b/src/sage/env.py
index c4953cfa65..c16696d298 100644
--- a/src/sage/env.py
+++ b/src/sage/env.py
@@ -293,7 +293,7 @@ def _get_shared_lib_path(*libnames: str) -> Optional[str]:
             if sys.platform == 'darwin':
                 ext = 'dylib'
             else:
-                ext = 'so'
+                ext = 'so*'
 
             if SAGE_LOCAL:
                 search_directories.append(Path(SAGE_LOCAL) / 'lib')
diff --git a/src/sage/libs/gap/saved_workspace.py b/src/sage/libs/gap/saved_workspace.py
index ad5adec36d..59c498795f 100644
--- a/src/sage/libs/gap/saved_workspace.py
+++ b/src/sage/libs/gap/saved_workspace.py
@@ -8,7 +8,7 @@ workspaces.
 
 import os
 import glob
-from sage.env import GAP_ROOT_DIR
+from sage.libs.gap.util import gap_root
 from sage.interfaces.gap_workspace import gap_workspace_file
 
 
@@ -31,7 +31,7 @@ def timestamp():
     """
     libgap_dir = os.path.dirname(__file__)
     libgap_files = glob.glob(os.path.join(libgap_dir, '*'))
-    gap_packages = glob.glob(os.path.join(GAP_ROOT_DIR, 'pkg', '*'))
+    gap_packages = glob.glob(os.path.join(gap_root(), 'pkg', '*'))
     files = libgap_files + gap_packages
     if len(files) == 0:
         print('Unable to find LibGAP files.')
diff --git a/src/sage/libs/gap/util.pyx b/src/sage/libs/gap/util.pyx
index 08c4c40cc0..c7dd557c35 100644
--- a/src/sage/libs/gap/util.pyx
+++ b/src/sage/libs/gap/util.pyx
@@ -23,6 +23,7 @@ from cysignals.signals cimport sig_on, sig_off
 import os
 import warnings
 import sage.env
+import subprocess
 
 from .gap_includes cimport *
 from .element cimport *
@@ -178,6 +179,16 @@ def gap_root():
     if os.path.exists(sage.env.GAP_ROOT_DIR):
         return sage.env.GAP_ROOT_DIR
 
+    gap_expr = 'JoinStringsWithSeparator(KERNEL_INFO().GAP_ROOT_PATHS,";")'
+    gap_root_paths = subprocess.getoutput(
+        f"gap -r -q --bare --nointeract -c 'Display({gap_expr});'"
+        ).strip().split(';')
+
+    for gapdir in gap_root_paths:
+        if os.path.exists(os.path.join(gapdir, 'sysinfo.gap')):
+            sage.env.GAP_ROOT_DIR = gapdir
+            return gapdir
+
     # Attempt to figure out the appropriate GAP_ROOT by reading the
     # local/bin/gap shell script; this is an ugly hack that exists for
     # historical reasons; the best approach to setting where Sage looks for
diff --git a/src/sage_setup/optional_extension.py b/src/sage_setup/optional_extension.py
index f252849384..4034e3e196 100644
--- a/src/sage_setup/optional_extension.py
+++ b/src/sage_setup/optional_extension.py
@@ -80,7 +80,7 @@ def OptionalExtension(*args, **kwds):
         sage: print(ext.__class__.__name__)
         CythonizeExtension
         sage: ext = OptionalExtension("foo", ["foo.c"], package="gap")
-        sage: print(ext.__class__.__name__)
+        sage: print(ext.__class__.__name__)     # not tested - fails with system gap
         Extension
     """
     try:
-- 
2.34.1

